#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–±–æ—Ç—ã —Å–∏—Å—Ç–µ–º—ã –æ—á–µ—Ä–µ–¥–∏ –ø–æ–∫—É–ø–æ–∫.
"""

import os
import sys
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from database.database import Database

def test_queue_system():
    # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—É—é –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
    db = Database('test_queue.db')
    
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã –æ—á–µ—Ä–µ–¥–∏...")
    
    # 1. –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π –ª–æ—Ç
    account_id = db.add_account("Test VEO3 Account", 50.0)
    print(f"‚úÖ –°–æ–∑–¥–∞–Ω —Ç–µ—Å—Ç–æ–≤—ã–π –ª–æ—Ç #{account_id}")
    
    # 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –ª–æ—Ç –ø—É—Å—Ç–æ–π
    available = db.count_available_credentials(account_id)
    print(f"üì¶ –î–æ—Å—Ç—É–ø–Ω—ã—Ö –∞–∫–∫–∞—É–Ω—Ç–æ–≤ –≤ –ª–æ—Ç–µ: {available}")
    
    # 3. –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ –æ—á–µ—Ä–µ–¥—å
    queue_id1 = db.add_to_purchase_queue(
        user_id=12345,
        account_id=account_id,
        payment_type="crypto",
        price_usdt=50.0,
        username="user1",
        invoice_id="inv123",
        payment_status="paid"
    )
    print(f"üë§ –î–æ–±–∞–≤–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å 1 –≤ –æ—á–µ—Ä–µ–¥—å (ID: {queue_id1})")
    
    queue_id2 = db.add_to_purchase_queue(
        user_id=67890,
        account_id=account_id,
        payment_type="rub",
        price_usdt=50.0,
        price_rub=4750,
        username="user2",
        payment_status="paid"
    )
    print(f"üë§ –î–æ–±–∞–≤–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å 2 –≤ –æ—á–µ—Ä–µ–¥—å (ID: {queue_id2})")
    
    # 4. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑–º–µ—Ä –æ—á–µ—Ä–µ–¥–∏
    queue_size = db.get_queue_size(account_id)
    print(f"üë• –†–∞–∑–º–µ—Ä –æ—á–µ—Ä–µ–¥–∏: {queue_size}")
    
    # 5. –î–æ–±–∞–≤–ª—è–µ–º –ª–æ–≥–∏ –∏ –ø—Ä–æ–≤–µ—Ä—è–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É –æ—á–µ—Ä–µ–¥–∏
    print("\nüìã –î–æ–±–∞–≤–ª—è–µ–º –ª–æ–≥–∏ –≤ –ª–æ—Ç...")
    db.add_credential(account_id, "login1:password1:email1@test.com")
    db.add_credential(account_id, "login2:password2:email2@test.com")
    
    available_after = db.count_available_credentials(account_id)
    print(f"üì¶ –î–æ—Å—Ç—É–ø–Ω—ã—Ö –∞–∫–∫–∞—É–Ω—Ç–æ–≤ –ø–æ—Å–ª–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è: {available_after}")
    
    # 6. –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –æ—á–µ—Ä–µ–¥—å
    queue_entries = db.process_queue_for_lot(account_id)
    print(f"üîÑ –ù–∞–π–¥–µ–Ω–æ –∑–∞–ø–∏—Å–µ–π –≤ –æ—á–µ—Ä–µ–¥–∏ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏: {len(queue_entries)}")
    
    for entry in queue_entries:
        queue_id, user_id, payment_type, price_usdt, price_rub, username, invoice_id, payment_status = entry
        print(f"   - –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} (@{username}), —Ç–∏–ø: {payment_type}, —Å—Ç–∞—Ç—É—Å: {payment_status}")
    
    # 7. –°–∏–º—É–ª–∏—Ä—É–µ–º –ø—Ä–æ–¥–∞–∂—É
    print("\nüí∞ –°–∏–º—É–ª–∏—Ä—É–µ–º –ø—Ä–æ–¥–∞–∂–∏...")
    success1, details1, depleted1 = db.mark_account_sold(account_id, 12345, 50.0)
    if success1:
        print(f"‚úÖ –ü—Ä–æ–¥–∞–∂–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é 12345: {details1}")
        db.mark_queue_entry_fulfilled(queue_id1)
        print("‚úÖ –ó–∞–ø–∏—Å—å –≤ –æ—á–µ—Ä–µ–¥–∏ –ø–æ–º–µ—á–µ–Ω–∞ –∫–∞–∫ –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω–∞—è")
    
    success2, details2, depleted2 = db.mark_account_sold(account_id, 67890, 50.0)
    if success2:
        print(f"‚úÖ –ü—Ä–æ–¥–∞–∂–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é 67890: {details2}")
        db.mark_queue_entry_fulfilled(queue_id2)
        print("‚úÖ –ó–∞–ø–∏—Å—å –≤ –æ—á–µ—Ä–µ–¥–∏ –ø–æ–º–µ—á–µ–Ω–∞ –∫–∞–∫ –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω–∞—è")
    
    # 8. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–∏–Ω–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    final_available = db.count_available_credentials(account_id)
    final_queue_size = db.get_queue_size(account_id)
    print(f"\nüìä –§–∏–Ω–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ:")
    print(f"   - –î–æ—Å—Ç—É–ø–Ω—ã—Ö –∞–∫–∫–∞—É–Ω—Ç–æ–≤: {final_available}")
    print(f"   - –†–∞–∑–º–µ—Ä –æ—á–µ—Ä–µ–¥–∏: {final_queue_size}")
    print(f"   - –õ–æ—Ç –∏—Å—Ç–æ—â–µ–Ω: {depleted2}")
    
    # 9. –î–æ–±–∞–≤–ª—è–µ–º –µ—â–µ –æ–¥–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –æ—á–µ—Ä–µ–¥—å –¥–ª—è –∏—Å—Ç–æ—â–µ–Ω–Ω–æ–≥–æ –ª–æ—Ç–∞
    queue_id3 = db.add_to_purchase_queue(
        user_id=11111,
        account_id=account_id,
        payment_type="crypto",
        price_usdt=50.0,
        username="user3",
        invoice_id="inv456",
        payment_status="paid"
    )
    
    final_queue_size2 = db.get_queue_size(account_id)
    print(f"\nüîÑ –ü–æ—Å–ª–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –æ—á–µ—Ä–µ–¥—å –¥–ª—è –∏—Å—Ç–æ—â–µ–Ω–Ω–æ–≥–æ –ª–æ—Ç–∞:")
    print(f"   - –†–∞–∑–º–µ—Ä –æ—á–µ—Ä–µ–¥–∏: {final_queue_size2}")
    
    print("\n‚úÖ –¢–µ—Å—Ç —Å–∏—Å—Ç–µ–º—ã –æ—á–µ—Ä–µ–¥–∏ –∑–∞–≤–µ—Ä—à–µ–Ω!")
    
    # –£–¥–∞–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—É—é –±–∞–∑—É
    import os
    os.remove('test_queue.db')
    print("üóëÔ∏è –¢–µ—Å—Ç–æ–≤–∞—è –±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —É–¥–∞–ª–µ–Ω–∞")

if __name__ == "__main__":
    test_queue_system()